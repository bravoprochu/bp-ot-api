// <auto-generated />
using bp.ot.s.API.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace bp.ot.s.API.entities.migrations.dane
{
    [DbContext(typeof(OfferTransDbContextDane))]
    [Migration("20171019180802_CompanyEmployee")]
    partial class CompanyEmployee
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("bp.ot.s.API.Entities.Dane.Address.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address_type");

                    b.Property<int>("CompanyRefId");

                    b.Property<string>("Country")
                        .HasMaxLength(2);

                    b.Property<string>("Locality");

                    b.Property<string>("Postal_code")
                        .HasMaxLength(12);

                    b.Property<string>("Street_address");

                    b.Property<string>("Street_number");

                    b.HasKey("AddressId");

                    b.HasIndex("CompanyRefId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("bp.ot.s.API.Entities.Dane.Company.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("Legal_name");

                    b.Property<string>("Native_name");

                    b.Property<string>("Short_name");

                    b.Property<string>("Telephone");

                    b.Property<int>("TransId");

                    b.Property<string>("Url");

                    b.Property<string>("Vat_id");

                    b.HasKey("CompanyId");

                    b.ToTable("Comapny");
                });

            modelBuilder.Entity("bp.ot.s.API.Entities.Dane.Company.CompanyEmployee", b =>
                {
                    b.Property<int>("CompanyEmployeeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompanyRefId");

                    b.Property<string>("Email");

                    b.Property<bool>("Entitled");

                    b.Property<string>("Family_name");

                    b.Property<string>("Given_name");

                    b.Property<bool>("Hidden");

                    b.Property<bool>("Is_driver");

                    b.Property<bool>("Is_moderator");

                    b.Property<string>("Telephone");

                    b.Property<string>("Trans_id");

                    b.HasKey("CompanyEmployeeId");

                    b.HasIndex("CompanyRefId");

                    b.ToTable("CompanyEmployee");
                });

            modelBuilder.Entity("bp.ot.s.API.Entities.Dane.Address.Address", b =>
                {
                    b.HasOne("bp.ot.s.API.Entities.Dane.Company.Company", "Company")
                        .WithMany("AddressList")
                        .HasForeignKey("CompanyRefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("bp.ot.s.API.Entities.Dane.Company.CompanyEmployee", b =>
                {
                    b.HasOne("bp.ot.s.API.Entities.Dane.Company.Company", "Company")
                        .WithMany("Employee")
                        .HasForeignKey("CompanyRefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
